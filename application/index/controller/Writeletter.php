<?php
namespace app\index\controller;
use app\common\controller\HomeBase;
use app\index\model\WriteLetter as WriteLetterModel;
use think\Db;
use think\Session;
use think\Request;
use think\Config;

/**
 * 写律师函与修改律师函
 * Class WriteLetter
 * @package app\index\controller
 */
class Writeletter extends HomeBase{
    protected $writemodel;
     protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->writemodel = new WriteLetterModel();
    }

    /*
     * 查询写信的展示信息
     * */
    public function getLetterList(){
        if(Request::instance()->isPost()){
            //type发函类型
            $type = $this->request->param('type');
            $uid = $this->request->param('uid');
            $order = $this->request->param('order_number');
            $token =Request::instance()->header('token');
            $phone = getOneUserVal(['id'=>$uid],'mobile');
            $v = validateUser('token',$phone,$token);
            if($v>0){
                jsonSend(3,'验证信息已失效');exit;
            }
            if($phone){
                $res =  $this->writemodel->getLetter([$uid,$type,$order]);
                jsonSend(1,'数据获取成功',$res);
            }else{
                jsonSend(0,'该用户不存在');
            }
        }else{
            jsonSend(0,'请求类型错误');
        }
    }
    /*
     * 更新或者新建新的写信内容
     * uid用户的id
     * 传递参数：send_type 0个人发函或 1是企业发函
     * content 需求描述
     * 更新的话需要把订单号传过来  没有订单号就直接新建
     * */
    public function writeLetter(){
        if(Request::instance()->isPost()){
            $params = $this->request->param();
            $token =Request::instance()->header('token');
            $uu = getUserVal(['id'=>$params['uid']],'mobile,userauth');
            $v = validateUser('token',$uu['mobile'],$token);
            if($v>0){
                jsonSend(3,'验证信息已失效');exit;
            }
//            校验邮箱信息

            (array_key_exists('order_number',$params) && !empty($params['order_number'])) ? $type = 'update' : $type = 'add';
            $num = searchOrderNum($params['uid']);
            if($type =='add') {
                if ($num >= 3) {
                    jsonSend(0, '你已存在3个未支付的订单', ['num' => $num, 'userId' => $params['uid']]);
                    exit;
                }
            }
            if(!empty($params['content'])){
                $blackValidate = blackListValidate($params['content']);
                if(count($blackValidate)>0){  jsonSend(0,'描述中存在敏感词汇，请修改');exit;}
            }else{
                jsonSend(0,'请填写描述内容');exit;
            }
            if(empty($params['file'])){
                jsonSend(0,'请上传证明图片');exit;
            }
            $order = $this->writemodel->writeSaveUpdate($params,$type);
            if(!is_array($order) && $order==1){
                jsonSend(0,'哎呀，出错啦');
            }else if(is_array($order) && $order !=1){
                jsonSend(1,'保存成功',['order_number'=>$order[0],'url'=>$order[1],'userId'=>$params['uid'],'is_complete'=>0,'num'=>$num]);
            }else{
                jsonSend(0,'保存失败');
            }
        }else{
            jsonSend(0,'请求类型错误');
        }
    }

    /*
     * 地址填写与更新
     *
     * */
    public function writeAddress(){
        if(Request::instance()->isPost()){
           // 返回数据  订单号 等等的信息  uid  不用传手机号就可以
            $param = Request::instance()->param();
            $token =Request::instance()->header('token');
//            var_dump($param);die;
            if(!array_key_exists('order_number',$param)){jsonSend(0,'缺少订单号',['uid'=>$param['uid']]);exit;}
//            if(!array_key_exists('real_auth',$param) || empty($param['real_auth'])){jsonSend(0,'请先进行实名认证',['uid'=>$param['uid']]);exit;}
            $phone = getUserVal(['id'=>$param['uid']],'mobile,userauth');
            $v = validateUser('token',$phone['mobile'],$token);
            if($v>0){
                jsonSend(3,'验证信息已失效');exit;
            }
            if($phone['userauth'] == 0){ jsonSend(0,'请先进行实名认证');exit;}
            //首先查找是否存在这个订单号
            $order = searchSingalVal('os_address','order_number',['order_number'=>$param['order_number'],'uid'=>$param['uid']]);
            $is_complete = searchSingalVal('os_order_list','is_complete',['order_number'=>$param['order_number'],'uid'=>$param['uid']]);
            $order ? $type='update' : $type='add';
            $params['real_auth'] ='';
            $order = $this->writemodel->writeAddress($param,$type);
            if($order) {jsonSend(1,'提交成功',['order_number'=>$param['order_number'],'userId'=>$param['uid'],'is_complete'=>$is_complete
            ]);}else{jsonSend(0,'哎呀，出错了',['order_number'=>$param['order_number'],'userId'=>$param['uid'],'is_complete'=>$is_complete
            ]);};
        }else{
            jsonSend(0,'非法请求');
        }
    }
    /*
     * 支付时信息查询  商户号的id等信息
     * */
    public function getPayInfo(){
        //需要提交参数：type 0微信  1支付宝
        if(Request::instance()->isPost()){
            $param = Request::instance()->param();
            $token=Request::instance()->header('token');//
            $phone = getOneUserVal(['id'=>$param['uid']],'mobile');
            $v = validateUser('token',$phone,$token);
            if($v>0){
                jsonSend(3,'验证信息已失效');exit;
            }
            switch($param['type']){
                case 0://微信
                    $data=[
                        config::get('wx_appid'),

                    ];
                    break;
                case 1://支付宝
                    $data=[
                        config::get('zfb_appid'),

                    ];
                    break;
            }
            //更新优惠券的使用方式
            if(array_key_exists('reduced_id',$param)){
                $use =Db::name('reduced')->where(['id'=>$param['reduced_id'],'uid'=>$param['uid']])->setField('is_use',$param['is_use']);
                if(!$use){
                    jsonSend(0,'该优惠券不存在',['userId' => $param['uid'], 'order_number' => $param['order_number']]);
                }
            }
                $arr = [
                    'uid' => $param['uid'],
                    'order_number' => $param['order_number'],
                    'client_type' => $param['type'],
                    'pay_status' => $param['pay_status'],
                    'money' => $param['money'],
                    'successinfo' => $param['info'],
                    'is_coupon' => $param['is_use'],
                    'createtime' => getFormatTime(),
                    'updatetime' => getFormatTime()
                ];
                Db::name('rewards')->insert($arr);
                Db::table('os_order_list')->where(['order_number' => $param['order_number']])->update(['paystatus'=>$param['pay_status'],'step'=>3,'updatetime'=>getFormatTime()]);//更新付款状态
                $is_complete = searchSingalVal('os_order_list', 'is_complete', ['order_number' => $param['order_number'], 'uid' => $param['uid']]);
                jsonSend(1, '请求成功', ['userId' => $param['uid'], 'order_number' => $param['order_number'], 'is_complete' => $is_complete]);

        }else{
            jsonSend(0,'请求类型错误');
        }
    }
    /*
     * 邮戳的提醒信息
     * @param 需要传输uid和order_number,token三个参数
     * */
    public function getMarkMessage(){
        if(Request::instance()->isPost()){
            $param = Request::instance()->param();//uid  order_number   replenish_content三个参数
            $token = Request::instance()->header('token');
            $phone = getOneUserVal(['id'=>$param['uid']],'mobile');
            $v = validateUser('token',$phone,$token);
            if($v>0){
                jsonSend(3,'验证信息已失效');exit;
            }
            $content = Db::table('os_message')->where(['order_number'=>$param['order_number'],'uid'=>$param['uid'],'send_type'=>1])->order('createtime desc')->value('content');
            jsonSend(1,'获取成功',['message'=>$content,'order_number'=>$param['order_number'],'userId'=>$param['uid']]);

        }else{
            jsonSend(0,'请求类型错误');exit;
        }
    }
    /**
     *提交邮戳的补充资料
     * @param 资料的集合  和  uid 和  order_number 和token 和is_have用户是否有资料进行补充  0没有资料（不用补充） 1补充完毕（有补充，补充完毕了）
     * */
    public function submitFile(){
        if(Request::instance()->isPost()){
            $mess =0;
            Db::startTrans();
            try{
                $param = Request::instance()->param();//uid  order_number   replenish_content  is_have四个参数
                $token = Request::instance()->header('token');
                $phone = getOneUserVal(['id'=>$param['uid']],'mobile');
                $v = validateUser('token',$phone,$token);
                if($v>0){
                    jsonSend(3,'验证信息已失效');exit;
                }
//               $lis = Db::name('order_list')->where(['order_number'=>$param['order_number']])->field('times')->find();
//                if($lis['times' >= 2]){ jsonSend(0,'最多修改两次');exit;}
                $arr=['is_have'=>$param['is_have'],'updatetime'=>getFormatTime()];//信息描述保存
                switch($param['is_have']){
                    case 1://完善需求
                        //循环把资料弄到表中去
                        $arr['replenish_content']=$param['replenish_content'];
                        $arr['layerIssue']=3;
                        if(!empty($param['file'])){
                            $fileUrl = base64Upload($param['file']);
                            count($fileUrl)==1 ? $url =$fileUrl[0] : $url = implode(',',$fileUrl);
                        }else{
                            $fileUrl =$url='';
                        }

                       $re =  Db::name('letters_file')->where(['order_number'=>$param['order_number'],'status'=>1])->find();
                        if($re){
                            $arr['replenishId']= $re['id'];
                            Db::name('letters_file')->where(['order_number'=>$param['order_number'],'status'=>1])->update(['file'=>$url,'updatetime'=>getFormatTime()]);
                        }else{
                            Db::name('letters_file')->insert(['order_number'=>$param['order_number'],'file'=>$url,'status'=>1,'createtime'=>getFormatTime(),'updatetime'=>getFormatTime()]);
                            $arr['replenishId']= Db::name('letters_file')->getLastInsID();
                        }
                        Db::name('replenish')->insert([
                            'order_number'=>$param['order_number'],
                            'content'=>$param['replenish_content'],
                            'url'=> $url,
                            'createtime'=> getFormatTime()
                        ]);
                        break;
                    case 0:
                        $fileUrl='';
                        $arr['layerletter_have']=0;
                        break;
                }

                Db::name('order_list')->where(['uid'=>$param['uid'],'order_number'=>$param['order_number']])->update($arr);//更新是否资料补充情况
                Db::commit();
                $mess =1;
        } catch (\Exception $e) {
            // 回滚事务

        }
            if($mess ==1) {
                jsonSend(1, '更新成功', ['order_number' => $param['order_number'], 'userId' => $param['uid'], 'url' => $fileUrl]);
            }else if($mess ==0) {
                jsonSend(0, '哎呀，出错啦', ['order_number' => $param['order_number'], 'userId' => $param['uid']]);
            }
        }else{
            jsonSend(0,'请求类型错误');exit;
        }
    }

    /**
     *提交邮戳的的修改意见
     * @param message修改意见  和  uid 和  order_number 和token   is_issue是否有意见  0有意见  1没意见确认发函
     * */
    public function postMarkIdea(){
        if(Request::instance()->isPost()){
            $param = Request::instance()->param();//uid  order_number is_issue  message四个信息
            $token = Request::instance()->header('token');
            $phone = getOneUserVal(['id'=>$param['uid']],'mobile');
            $v = validateUser('token',$phone,$token);
            if($v>0){
                jsonSend(3,'验证信息已失效');exit;
            }
            if($param['is_issue'] == 0) {
                $info = Db::name('order_list')->where(['order_number' => $param['order_number'], 'uid' => $param['uid']])->field('times,layerletter_have')->find();
               if($info['layerletter_have']==0){ jsonSend(0, '律师正在出涵，请稍后...');exit;}
                $times = $info['times'];
                if ($times > 2) {
                    jsonSend(0, '你的2次修改机会已用完', ['userId' => $param['uid'], 'order_number' => $param['order_number'], 'times' => $times]);
                    exit;
                }
            }else{$times=0;}
            $res= $this->writemodel->postMarkIdea($param,$times);
            jsonSend(1,'提交成功',$res);
        }else{
            jsonSend(0,'请求类型错误');exit;
        }
    }

    /**
     * 获取用户的所有的订单
     * 参数  uid
     * status  1进行中（没有写订单号的）  2未付款  3已完成  全部（默认为0）
     * token
    **/
    public function getUserAllOrderList(){
        if(Request::instance()->isPost()){
            $param = Request::instance()->param();//uid  status两个信息
            array_key_exists('page',$param) ? $page = $param['page'] : $page =1;
            $token = Request::instance()->header('token');
            $phone = getOneUserVal(['id'=>$param['uid']],'mobile');
            $v = validateUser('token',$phone,$token);
//            if($v>0){
//                jsonSend(3,'验证信息已失效');exit;
//            }
            !array_key_exists('status',$param) ? $status = 0 : $status = $param['status'];
            switch($status){
                case 0:
                    $where='';
                    break;
                case 1://进行中。没有填写订单号的都算
                    $where ['express_number']='';
                    $where ['paystatus']=1;
                    break;
                case 2://未付款
                    $where['paystatus']=0;
                    $where['is_complete']=0;
                    break;
                case 3://已完成
                    $where['is_complete']=1;
                    break;
            }
            $num =10;
            $res = Db::table('os_order_list')->where(['uid'=>$param['uid']])->where($where)->field('id,recude_id,order_number,express_number,uid,send_type,paystatus,step,is_complete,layerletter_have,layerIssue,receive_order,createtime,expresstime,completetime,receivetime,cancletime')->order('createtime desc')->page($page,$num)->select();
//            echo Db::table('os_order_list')->getlastsql();die;
            foreach($res as $k=>$v){
                $address= Db::name('address')->where(['order_number'=>$v['order_number']])->field('accept_name,accept_phone,accept_address,accept_email,companyCode')->find();
                $address ?  $res[$k]['address']=$address :  $res[$k]['address']=['accept_name'=>'','accept_phone'=>'','accept_address'=>'','accept_email'=>'','companyCode'=>''];
//                $money= Db::name('rewards')->where(['order_number'=>$v['order_number'],'pay_status'=>1])->value('total_amount');
                $moneys= Db::name('rewards')->where(['order_number'=>$v['order_number'],'pay_status'=>1])->find();
                $moneys['client_type']==0 ?  $money = $moneys['total_amount']/100 : $money=$moneys['total_amount'];//微信和支付宝
                $money ? $res[$k]['payMoney']=$money : $res[$k]['payMoney']='';
                if($v['recude_id'] !=0){
                    $res[$k]['reduce'] = Db::table('os_reduced')->where(['id'=>$v['recude_id']])->value('money') ;//优惠的钱
                    $money = 168-  $res[$k]['reduce'];//实际付款
                    $money <=0 ? $res[$k]['real_money']=0.01 : $res[$k]['real_money']=$money;
                }else{
                    $res[$k]['reduce_id']= $res[$k]['reduce']='0.00';
                    $res[$k]['real_money'] ='168.00';
                }
            }

            jsonSend(1,'获取成功',  $res);die;
        }else{
            jsonSend(0,'请求类型错误');
        }
    }


}